-- Initial expenses-csv-utils.cabal generated by cabal init.  For further
-- documentation, see http://haskell.org/cabal/users-guide/

name:                expenses-csv-utils
version:             0.1.1
-- synopsis:
-- description:
license:             MIT
license-file:        LICENSE
author:              Richard Goulter
maintainer:          richard.goulter@gmail.com
-- copyright:
category:            Text
build-type:          Simple
extra-source-files:  README.MD
cabal-version:       >=1.10

library
  -- other-modules:
  -- other-extensions:
  build-depends:       base >=4.8 && <4.9
                     , megaparsec >= 5.0.0
                     , time >=1.6 && <1.7
                     , csv >=0.1 && <0.2
                     , unordered-containers
                     , hashable
                     , split
  hs-source-dirs:    src/
  exposed-modules:     ParseDateDirective
                     , ParseExpenseDirective
                     , ParseExpensesDoc
                     , Categorise
                     , CategoriseEntries
                     , UI.Types
  default-language:    Haskell2010


test-suite tests
  main-is:             TestSpec.hs
  type: exitcode-stdio-1.0
  -- other-modules:
  -- other-extensions:
  build-depends:       base >=4.8 && <4.9
                     , megaparsec >= 5.0.0
                     , time >=1.6 && <1.7
                     , csv >=0.1 && <0.2
                     , expenses-csv-utils
                     , hspec              >= 2.0
                     , hspec-expectations >= 0.5
                     , hspec-megaparsec == 0.2.0
                     , containers         >= 0.5 && < 0.6
                     , heredoc >= 0.2
                     , hashable
  if !impl(ghc >= 8.0)
    build-depends:     semigroups         == 0.18.*
  hs-source-dirs:      test/
  default-language:    Haskell2010


executable expenses-csv-utils
  main-is:             Main.hs
  -- other-modules:
  -- other-extensions:
  build-depends:       base >=4.8 && <4.9
                     , expenses-csv-utils
                     , megaparsec >= 5.0.0
                     , time >=1.6 && <1.7
                     , csv >=0.1 && <0.2
                     , hashable
  hs-source-dirs:      src/
  default-language:    Haskell2010


executable categorise-expenses
  main-is:             RunUI.hs
  -- other-modules:
  other-extensions:    OverloadedStrings, TemplateHaskell, RankNTypes
  build-depends:       base         >=4.8  && <4.9
                     , expenses-csv-utils
                     , microlens    >=0.4  && <0.5
                     , vty          >=5.5  && <5.6
                     , brick        >=0.7  && <0.8
                     , vector       >=0.11 && <0.12
                     , microlens-th >=0.4  && <0.5
                     , microlens
                     , text-zipper
                     , transformers
                     , expenses-csv-utils
                     , megaparsec >= 5.0.0
                     , time >=1.6 && <1.7
                     , csv >=0.1 && <0.2
                     , hashable
                     , unordered-containers
                     , split
  hs-source-dirs:      src/
  default-language:    Haskell2010
  ghc-options: -threaded


-- May be convenient to have a mock can use to play around
-- with the UI, rather than just Specs.
executable mock-ui
  main-is:             RunMockUI.hs
  -- other-modules:
  other-extensions:    OverloadedStrings, TemplateHaskell, RankNTypes
  build-depends:       base         >=4.8  && <4.9
                     , vty          >=5.5  && <5.6
                     , brick        >=0.7  && <0.8
                     , vector       >=0.11 && <0.12
                     , microlens-th >=0.4  && <0.5
                     , microlens
                     , text-zipper
                     , transformers
  hs-source-dirs:      src/
  default-language:    Haskell2010
  ghc-options: -threaded


